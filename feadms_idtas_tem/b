# directory structure:
# 1_detail | 2_loads | 3_profile | 4_result
if [[ $# -ne 1 ]]; then echo "Args numbers should = 1"; exit 1; fi
case $1 in
1)
model="B478FC46FDMS"
#det="1_detail/rod.det.Z"
det="1_detail/1d_4elem.det.Z"
profile="s747_8f_s46_20080627_door_rev-30sep10"
load_file="2_loads/load1d.dat";;
#ar=(4531442 4531445);;
2)
profile="737-800S43MEDC"
load_file="2_loads/MC42_1D.dat"
ar=(403001001001 403001003001);;
esac

"`reset`"
#1.create load file
feadms -m $model -det $det -set 1_detail/1d.set -a -o $load_file
echo "===== 1.load file created: `ls -l 2_loads`"

#2. clear all previous files
if [ -z "$(ls -A 4_result)" ]; then 
  echo "===== 2.result folder is empty: `ls -l 4_result`"
else `rm -r 4_result/*`; fi

#3. get elements array from xxx.dat 
#_.1.read element, lc, 1dstress string
  elem_line=$(tail -n 4 "$load_file" | head -1)
    lc_line=$(tail -n 3 "$load_file" | head -1)
stress_line=$(tail -n 2 "$load_file" | head -1)

#_.2.split line to array
IFS='|' read -ra   elem_ar <<< "$elem_line"
IFS='|' read -ra     lc_ar <<< "$lc_line"
IFS='|' read -ra stress_ar <<< "$stress_line"

#_.3.get bytes where block end
  elem_byte=${elem_ar[3]}
    lc_byte=${lc_ar[3]}
stress_byte=${stress_ar[3]}

#_.4.create array of  elems and x_coord
var_block_offset=80;
byte_sum=0; 
var_line=0;
elems=(); coord_x=()
while read line; do
  #count bytes in line and add to sum
  ((byte_sum+=${#line}+1))
  # echo "debug: len of $line = $byte_sum"
  #if we are in var block - put #elem, coord_x in array
  if (( $elem_byte+$var_block_offset  < byte_sum && byte_sum < $lc_byte-40 )); then
    # translate scientific notation to decimal
    line=$(printf "%.f" "$line");
    # var_block consist of group of 5 lines: #elem,beam,x,y,z
    ((reminder=var_line%5))
    case $reminder in
      0) elems+=($line);; 2) coord_x+=($line); ((byte_sum+=2));; *) ((byte_sum+=2));;
    esac
    ((var_line+=1)); 
    # echo "debug: var block $var_line"
  fi
done < $load_file
len_elem=${#elems[@]}
echo "===== 3.elements array ($len_elem) extracted from load_file"
for e in "${elems[@]}"; do echo -e $e; done
echo "===== x_coord"
for x in "${coord_x[@]}"; do echo -e $x; done

#4. create in159
in159="3_profile/$profile.in159"; rm $in159; touch $in159
echo "$len_elem $len_elem  /" > $in159 
for((i=0; i<$len_elem; i++));do
 echo "${elems[i]}             1 dmf X${coord_x[i]} /" >> $in159
done
echo -e "===== 4.idtas in159 file created\n `cat -n $in159`"

#5. put path to load in profile file
#feadms filea ../$load / 
echo -e "===== 5.write load path in flight profile file\n `cat -n 3_profile/$profile | grep feadms`"

#6. create idtas batch
bat="tmp"; rm $bat; touch $bat
echo -e "3_profile\n$profile\nn\n4_result\nn" >> $bat
idtas batch -bin $bat 
echo -e "===== 6.create idtas batch file:\n `cat -n $bat`"

#7. check result
result="4_result/pnt29b"
echo -e "===== 7.show pnt29b"
if [[ -e $result ]]; then cat $result; else echo "pnt29b not found"; fi 
